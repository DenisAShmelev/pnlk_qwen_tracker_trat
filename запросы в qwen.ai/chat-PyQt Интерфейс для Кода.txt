### USER
–µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫—É pyqt

### ASSISTANT
–ö–æ–Ω–µ—á–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫—É PyQt. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ø–æ–Ω—è—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: –∫–Ω–æ–ø–∫–∏, —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è, –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏ –∏ —Ç.–¥.), —Ç–∞–∫–∂–µ —É–∫–∞–∂–∏—Ç–µ –∏—Ö. –ï—Å–ª–∏ –Ω–µ—Ç, —è –ø—Ä–µ–¥–ª–æ–∂—É –±–∞–∑–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. 

–ñ–¥—É –≤–∞—à –∫–æ–¥! üòä

### USER
def main():
    # –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        days = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: "))
        total_expense = float(input("–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç: "))
        
        if days <= 0 or total_expense < 0:
            print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º, –∞ —Å—É–º–º–∞ —Ç—Ä–∞—Ç ‚Äî –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
            return
        
        # –†–∞—Å—á–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–π —Ç—Ä–∞—Ç—ã –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
        daily_expense = total_expense / days
        remaining_total = total_expense  # –û—Å—Ç–∞–≤—à–∞—è—Å—è —Å—É–º–º–∞ —Ç—Ä–∞—Ç
        remaining_days = days  # –û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
        
        # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç—Ä–∞—Ç –ø–æ –¥–Ω—è–º
        daily_expenses_actual = []
        
        for day in range(1, days + 1):
            print(f"\n–î–µ–Ω—å {day}: –ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞ - {daily_expense:.2f}")
            
            # –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
            accumulated_expense_for_day = 0
            
            # –¶–∏–∫–ª –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç
            while True:
                try:
                    current_expense = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É (–∏–ª–∏ 'end' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω—è): ")
                    
                    if current_expense.lower() == 'end':
                        break
                    
                    current_expense = float(current_expense)
                    if current_expense < 0:
                        print("–¢–µ–∫—É—â–∞—è —Ç—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                        continue
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É –∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º —Ç—Ä–∞—Ç–∞–º –¥–Ω—è
                    accumulated_expense_for_day += current_expense
                    remaining_total -= current_expense
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –æ–±—â–µ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç
                    if remaining_total <= 0:
                        print("\n–í–Ω–∏–º–∞–Ω–∏–µ: –í—Å–µ –¥–µ–Ω—å–≥–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω—ã!")
                    
                    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
                    remaining_for_day = daily_expense - accumulated_expense_for_day
                    
                    print(f"–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å: {remaining_for_day:.2f}")
                    print(f"–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –≤—Å–µ –¥–Ω–∏: {remaining_total:.2f}")
                    
                    # –ï—Å–ª–∏ –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –¥–µ–Ω—å –º–µ–Ω—å—à–µ –Ω—É–ª—è, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                    if remaining_for_day < 0:
                        print("–í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å!")
                
                except ValueError:
                    print("–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ 'end'.")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ç—Ä–∞—Ç—É –∑–∞ –¥–µ–Ω—å
            daily_expenses_actual.append(accumulated_expense_for_day)
            
            # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω—è –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Å—É–º–º—É –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
            remaining_days -= 1  # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π
            if remaining_days > 0 and remaining_total > 0:
                daily_expense = remaining_total / remaining_days
                print(f"\n–ù–æ–≤–∞—è –ø–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –¥–Ω–∏: {daily_expense:.2f}")
            else:
                if remaining_days > 0:
                    print("\n–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –¥–Ω–∏: 0.00 (–Ω–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Ä–µ–¥—Å—Ç–≤).")
                else:
                    print("\n–≠—Ç–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å. –ë–æ–ª—å—à–µ –¥–Ω–µ–π –¥–ª—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞ –Ω–µ—Ç.")
        
        # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print("\n--- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ç ---")
        print(f"{'–î–µ–Ω—å':<10}{'–¢—Ä–∞—Ç–∞':<15}")
        print("-" * 25)
        
        total_spent = 0
        for day, expense in enumerate(daily_expenses_actual, start=1):
            print(f"{day:<10}{expense:.2f}")
            total_spent += expense
        
        print("-" * 25)
        print(f"–ò—Ç–æ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {total_spent:.2f}")
    
    except ValueError:
        print("–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")

if __name__ == "__main__":
    main()

### ASSISTANT
–î–ª—è –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º PyQt –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –í PyQt –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è (`QLineEdit`), –∫–Ω–æ–ø–∫–∏ (`QPushButton`), –º–µ—Ç–∫–∏ (`QLabel`) –∏ —Ç–∞–±–ª–∏—Ü—ã (`QTableWidget`), —á—Ç–æ–±—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å.

–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω –ø—Ä–∏–º–µ—Ä –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º PyQt5:

```python
import sys
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget, QTableWidget, QTableWidgetItem, QMessageBox
)


class ExpenseTracker(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–¢—Ä–µ–∫–µ—Ä —Ç—Ä–∞—Ç")
        self.setGeometry(100, 100, 600, 400)

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout()

        # –ü–æ–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        self.days_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:")
        self.days_input = QLineEdit()
        self.total_expense_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç:")
        self.total_expense_input = QLineEdit()

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
        self.start_button = QPushButton("–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
        self.start_button.clicked.connect(self.start_tracking)

        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.table = QTableWidget()
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["–î–µ–Ω—å", "–¢—Ä–∞—Ç–∞"])

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞–∫–µ—Ç
        self.layout.addWidget(self.days_label)
        self.layout.addWidget(self.days_input)
        self.layout.addWidget(self.total_expense_label)
        self.layout.addWidget(self.total_expense_input)
        self.layout.addWidget(self.start_button)
        self.layout.addWidget(self.table)

        self.central_widget.setLayout(self.layout)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.days = 0
        self.total_expense = 0
        self.daily_expenses_actual = []

    def start_tracking(self):
        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            self.days = int(self.days_input.text())
            self.total_expense = float(self.total_expense_input.text())

            if self.days <= 0 or self.total_expense < 0:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º, –∞ —Å—É–º–º–∞ —Ç—Ä–∞—Ç ‚Äî –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                return

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            self.remaining_total = self.total_expense
            self.remaining_days = self.days
            self.daily_expense = self.total_expense / self.days
            self.daily_expenses_actual = []

            # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            self.track_day(1)

        except ValueError:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")

    def track_day(self, day):
        if day > self.days:
            self.show_statistics()
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç
        dialog = DayExpenseDialog(day, self.daily_expense, self.remaining_total, self)
        if dialog.exec_():
            accumulated_expense_for_day = dialog.get_accumulated_expense()
            self.remaining_total -= accumulated_expense_for_day
            self.remaining_days -= 1

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ç—Ä–∞—Ç—ã –∑–∞ –¥–µ–Ω—å
            self.daily_expenses_actual.append(accumulated_expense_for_day)

            # –ü–µ—Ä–µ—Å—á–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–π —Ç—Ä–∞—Ç—ã –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
            if self.remaining_days > 0 and self.remaining_total > 0:
                self.daily_expense = self.remaining_total / self.remaining_days

            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
            self.track_day(day + 1)

    def show_statistics(self):
        # –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
        self.table.setRowCount(len(self.daily_expenses_actual))

        total_spent = 0
        for row, expense in enumerate(self.daily_expenses_actual):
            self.table.setItem(row, 0, QTableWidgetItem(str(row + 1)))
            self.table.setItem(row, 1, QTableWidgetItem(f"{expense:.2f}"))
            total_spent += expense

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º–æ–π
        self.table.insertRow(len(self.daily_expenses_actual))
        self.table.setItem(len(self.daily_expenses_actual), 0, QTableWidgetItem("–ò—Ç–æ–≥–æ:"))
        self.table.setItem(len(self.daily_expenses_actual), 1, QTableWidgetItem(f"{total_spent:.2f}"))


class DayExpenseDialog(QMessageBox):
    def __init__(self, day, daily_expense, remaining_total, parent=None):
        super().__init__(parent)
        self.setWindowTitle(f"–î–µ–Ω—å {day}")
        self.setText(f"–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞: {daily_expense:.2f}\n–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {remaining_total:.2f}")

        self.input = QLineEdit(self)
        self.input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É")
        self.layout().addWidget(self.input)

        self.addButton("–î–æ–±–∞–≤–∏—Ç—å", QMessageBox.AcceptRole)
        self.addButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å", QMessageBox.RejectRole)

        self.accumulated_expense = 0

    def exec_(self):
        while True:
            result = super().exec_()
            if result == QMessageBox.RejectRole:
                return True

            try:
                current_expense = float(self.input.text())
                if current_expense < 0:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è —Ç—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                    continue

                self.accumulated_expense += current_expense
                self.input.clear()
                QMessageBox.information(self, "–û—Å—Ç–∞—Ç–æ–∫", f"–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å: {self.daily_expense - self.accumulated_expense:.2f}")
            except ValueError:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

    def get_accumulated_expense(self):
        return self.accumulated_expense


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ExpenseTracker()
    window.show()
    sys.exit(app.exec_())
```

### –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã:
1. **–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ**:
   - –°–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –∏ –æ–±—â–µ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç.
   - –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ" –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å.

2. **–î–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è**:
   - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç–∞ –∏ –æ–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫.
   - –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã –∏ –∑–∞–≤–µ—Ä—à–∞—Ç—å –¥–µ–Ω—å.

3. **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**:
   - –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –¥–Ω–µ–π –¥–∞–Ω–Ω—ã–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ.

### –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç.
- –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã.
- –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –¥–Ω–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.

–≠—Ç–æ—Ç –∫–æ–¥ –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤–∏–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª –∏–ª–∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.

### USER
–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞: "AttributeError: 'DayExpenseDialog' object has no attribute 'daily_expense'"

### ASSISTANT
–û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –∫–ª–∞—Å—Å–µ `DayExpenseDialog` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞—Ç—Ä–∏–±—É—Ç `daily_expense`, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—ã–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ. –≠—Ç–æ—Ç –∞—Ç—Ä–∏–±—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ (`ExpenseTracker`) –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã.

–î–∞–≤–∞–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏–º —ç—Ç—É –æ—à–∏–±–∫—É –∏ —É–ª—É—á—à–∏–º –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

### –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥:

```python
import sys
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget, QTableWidget, QTableWidgetItem, QMessageBox
)


class ExpenseTracker(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–¢—Ä–µ–∫–µ—Ä —Ç—Ä–∞—Ç")
        self.setGeometry(100, 100, 600, 400)

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout()

        # –ü–æ–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        self.days_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:")
        self.days_input = QLineEdit()
        self.total_expense_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç:")
        self.total_expense_input = QLineEdit()

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
        self.start_button = QPushButton("–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
        self.start_button.clicked.connect(self.start_tracking)

        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.table = QTableWidget()
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["–î–µ–Ω—å", "–¢—Ä–∞—Ç–∞"])

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞–∫–µ—Ç
        self.layout.addWidget(self.days_label)
        self.layout.addWidget(self.days_input)
        self.layout.addWidget(self.total_expense_label)
        self.layout.addWidget(self.total_expense_input)
        self.layout.addWidget(self.start_button)
        self.layout.addWidget(self.table)

        self.central_widget.setLayout(self.layout)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.days = 0
        self.total_expense = 0
        self.daily_expenses_actual = []

    def start_tracking(self):
        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            self.days = int(self.days_input.text())
            self.total_expense = float(self.total_expense_input.text())

            if self.days <= 0 or self.total_expense < 0:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º, –∞ —Å—É–º–º–∞ —Ç—Ä–∞—Ç ‚Äî –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                return

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            self.remaining_total = self.total_expense
            self.remaining_days = self.days
            self.daily_expense = self.total_expense / self.days
            self.daily_expenses_actual = []

            # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            self.track_day(1)

        except ValueError:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")

    def track_day(self, day):
        if day > self.days:
            self.show_statistics()
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç
        dialog = DayExpenseDialog(day, self.daily_expense, self.remaining_total, self)
        if dialog.exec_():
            accumulated_expense_for_day = dialog.get_accumulated_expense()
            self.remaining_total -= accumulated_expense_for_day
            self.remaining_days -= 1

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ç—Ä–∞—Ç—ã –∑–∞ –¥–µ–Ω—å
            self.daily_expenses_actual.append(accumulated_expense_for_day)

            # –ü–µ—Ä–µ—Å—á–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–π —Ç—Ä–∞—Ç—ã –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
            if self.remaining_days > 0 and self.remaining_total > 0:
                self.daily_expense = self.remaining_total / self.remaining_days

            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
            self.track_day(day + 1)

    def show_statistics(self):
        # –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
        self.table.setRowCount(len(self.daily_expenses_actual))

        total_spent = 0
        for row, expense in enumerate(self.daily_expenses_actual):
            self.table.setItem(row, 0, QTableWidgetItem(str(row + 1)))
            self.table.setItem(row, 1, QTableWidgetItem(f"{expense:.2f}"))
            total_spent += expense

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º–æ–π
        self.table.insertRow(len(self.daily_expenses_actual))
        self.table.setItem(len(self.daily_expenses_actual), 0, QTableWidgetItem("–ò—Ç–æ–≥–æ:"))
        self.table.setItem(len(self.daily_expenses_actual), 1, QTableWidgetItem(f"{total_spent:.2f}"))


class DayExpenseDialog(QMessageBox):
    def __init__(self, day, daily_expense, remaining_total, parent=None):
        super().__init__(parent)
        self.setWindowTitle(f"–î–µ–Ω—å {day}")
        self.setText(f"–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞: {daily_expense:.2f}\n–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {remaining_total:.2f}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç—É –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞
        self.daily_expense = daily_expense

        self.input = QLineEdit(self)
        self.input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É")
        self.layout().addWidget(self.input)

        self.addButton("–î–æ–±–∞–≤–∏—Ç—å", QMessageBox.AcceptRole)
        self.addButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å", QMessageBox.RejectRole)

        self.accumulated_expense = 0

    def exec_(self):
        while True:
            result = super().exec_()
            if result == QMessageBox.RejectRole:
                return True

            try:
                current_expense = float(self.input.text())
                if current_expense < 0:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è —Ç—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                    continue

                self.accumulated_expense += current_expense
                self.input.clear()

                # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
                remaining_for_day = self.daily_expense - self.accumulated_expense
                QMessageBox.information(self, "–û—Å—Ç–∞—Ç–æ–∫", f"–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å: {remaining_for_day:.2f}")

                # –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                if remaining_for_day < 0:
                    QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å!")

            except ValueError:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

    def get_accumulated_expense(self):
        return self.accumulated_expense


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ExpenseTracker()
    window.show()
    sys.exit(app.exec_())
```

### –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ:
1. **–î–æ–±–∞–≤–ª–µ–Ω –∞—Ç—Ä–∏–±—É—Ç `daily_expense` –≤ `DayExpenseDialog`:**
   - –¢–µ–ø–µ—Ä—å `daily_expense` –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.

2. **–ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞—Å—á–µ—Ç –æ—Å—Ç–∞—Ç–∫–∞:**
   - –í –º–µ—Ç–æ–¥–µ `exec_` –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω —Ä–∞—Å—á–µ—Ç –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å (`remaining_for_day`).

3. **–£–ª—É—á—à–µ–Ω –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–π:**
   - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.

### –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç.
- –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã.
- –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –¥–Ω–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.

–¢–µ–ø–µ—Ä—å –∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞, –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å! üòä

### USER
–î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —á—Ç–æ–±—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∞—Å—å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ —Ç—Ä–∞—Ç—ã

### ASSISTANT
–ß—Ç–æ–±—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∞—Å—å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ —Ç—Ä–∞—Ç—ã, –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ (`ExpenseTracker`) —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–æ–≤—ã–º –æ–∫–Ω–æ–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –≤—ã–∑–≤–∞–≤ –º–µ—Ç–æ–¥ `show_statistics` –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–º –¥–Ω–µ.

–í–æ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –∫–æ–¥:

```python
import sys
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget, QTableWidget, QTableWidgetItem, QMessageBox
)


class ExpenseTracker(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–¢—Ä–µ–∫–µ—Ä —Ç—Ä–∞—Ç")
        self.setGeometry(100, 100, 600, 400)

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout()

        # –ü–æ–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        self.days_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:")
        self.days_input = QLineEdit()
        self.total_expense_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç:")
        self.total_expense_input = QLineEdit()

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
        self.start_button = QPushButton("–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
        self.start_button.clicked.connect(self.start_tracking)

        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.table = QTableWidget()
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["–î–µ–Ω—å", "–¢—Ä–∞—Ç–∞"])

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞–∫–µ—Ç
        self.layout.addWidget(self.days_label)
        self.layout.addWidget(self.days_input)
        self.layout.addWidget(self.total_expense_label)
        self.layout.addWidget(self.total_expense_input)
        self.layout.addWidget(self.start_button)
        self.layout.addWidget(self.table)

        self.central_widget.setLayout(self.layout)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.days = 0
        self.total_expense = 0
        self.daily_expenses_actual = []

    def start_tracking(self):
        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            self.days = int(self.days_input.text())
            self.total_expense = float(self.total_expense_input.text())

            if self.days <= 0 or self.total_expense < 0:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º, –∞ —Å—É–º–º–∞ —Ç—Ä–∞—Ç ‚Äî –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                return

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            self.remaining_total = self.total_expense
            self.remaining_days = self.days
            self.daily_expense = self.total_expense / self.days
            self.daily_expenses_actual = []

            # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            self.track_day(1)

        except ValueError:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")

    def track_day(self, day):
        if day > self.days:
            self.show_statistics()
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç
        dialog = DayExpenseDialog(day, self.daily_expense, self.remaining_total, self)
        if dialog.exec_():
            accumulated_expense_for_day = dialog.get_accumulated_expense()
            self.remaining_total -= accumulated_expense_for_day
            self.remaining_days -= 1

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ç—Ä–∞—Ç—ã –∑–∞ –¥–µ–Ω—å
            self.daily_expenses_actual.append(accumulated_expense_for_day)

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            self.show_statistics()

            # –ü–µ—Ä–µ—Å—á–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–π —Ç—Ä–∞—Ç—ã –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
            if self.remaining_days > 0 and self.remaining_total > 0:
                self.daily_expense = self.remaining_total / self.remaining_days

            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
            self.track_day(day + 1)

    def show_statistics(self):
        # –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
        self.table.setRowCount(len(self.daily_expenses_actual))

        total_spent = 0
        for row, expense in enumerate(self.daily_expenses_actual):
            self.table.setItem(row, 0, QTableWidgetItem(str(row + 1)))
            self.table.setItem(row, 1, QTableWidgetItem(f"{expense:.2f}"))
            total_spent += expense

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º–æ–π
        self.table.insertRow(len(self.daily_expenses_actual))
        self.table.setItem(len(self.daily_expenses_actual), 0, QTableWidgetItem("–ò—Ç–æ–≥–æ:"))
        self.table.setItem(len(self.daily_expenses_actual), 1, QTableWidgetItem(f"{total_spent:.2f}"))


class DayExpenseDialog(QMessageBox):
    def __init__(self, day, daily_expense, remaining_total, parent=None):
        super().__init__(parent)
        self.setWindowTitle(f"–î–µ–Ω—å {day}")
        self.setText(f"–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞: {daily_expense:.2f}\n–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {remaining_total:.2f}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç—É –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞
        self.daily_expense = daily_expense

        self.input = QLineEdit(self)
        self.input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É")
        self.layout().addWidget(self.input)

        self.addButton("–î–æ–±–∞–≤–∏—Ç—å", QMessageBox.AcceptRole)
        self.addButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å", QMessageBox.RejectRole)

        self.accumulated_expense = 0

    def exec_(self):
        while True:
            result = super().exec_()
            if result == QMessageBox.RejectRole:
                return True

            try:
                current_expense = float(self.input.text())
                if current_expense < 0:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è —Ç—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                    continue

                self.accumulated_expense += current_expense
                self.input.clear()

                # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
                remaining_for_day = self.daily_expense - self.accumulated_expense
                QMessageBox.information(self, "–û—Å—Ç–∞—Ç–æ–∫", f"–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å: {remaining_for_day:.2f}")

                # –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                if remaining_for_day < 0:
                    QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å!")

            except ValueError:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

    def get_accumulated_expense(self):
        return self.accumulated_expense


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ExpenseTracker()
    window.show()
    sys.exit(app.exec_())
```

### –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ:
1. **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è:**
   - –ú–µ—Ç–æ–¥ `show_statistics` –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–æ–≤—ã–º –æ–∫–Ω–æ–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è. –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –≤—Å–µ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

2. **–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã:**
   - –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–º –¥–Ω–µ —Ç–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–∞–µ—Ç—Å—è –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–∞—Ç.

### –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
- –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ç—Ä–∞—Ç—ã –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–π —Å—É–º–º–µ.
- –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, —á—Ç–æ–±—ã –æ—Ç—Ä–∞–∂–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
- –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö.

–¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ —Ç—Ä–∞—Ç—ã. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞, –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å! üòä

### USER
–î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —á—Ç–æ–±—ã –≤—Å—ë –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –±—ã–ª–æ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ.

### ASSISTANT
–ß—Ç–æ–±—ã –≤—Å—ë –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ, –Ω—É–∂–Ω–æ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤—ã—Ö –æ–∫–æ–Ω (`QMessageBox`) –∏ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–∫–∏, –ø–æ–ª—è –≤–≤–æ–¥–∞, –º–µ—Ç–∫–∏) –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏—Ç –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.

–í–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥, –≥–¥–µ –≤—Å—ë –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ:

```python
import sys
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget, QTableWidget, QTableWidgetItem, QHBoxLayout
)


class ExpenseTracker(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–¢—Ä–µ–∫–µ—Ä —Ç—Ä–∞—Ç")
        self.setGeometry(100, 100, 800, 600)

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout()

        # –ü–æ–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        self.days_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:")
        self.days_input = QLineEdit()
        self.total_expense_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç:")
        self.total_expense_input = QLineEdit()

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
        self.start_button = QPushButton("–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
        self.start_button.clicked.connect(self.start_tracking)

        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.table = QTableWidget()
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["–î–µ–Ω—å", "–¢—Ä–∞—Ç–∞"])

        # –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç
        self.current_expense_label = QLabel("–¢–µ–∫—É—â–∞—è —Ç—Ä–∞—Ç–∞:")
        self.current_expense_input = QLineEdit()
        self.current_expense_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É")
        self.add_expense_button = QPushButton("–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É")
        self.finish_day_button = QPushButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å")
        self.info_label = QLabel("–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞...")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞–∫–µ—Ç
        self.layout.addWidget(self.days_label)
        self.layout.addWidget(self.days_input)
        self.layout.addWidget(self.total_expense_label)
        self.layout.addWidget(self.total_expense_input)
        self.layout.addWidget(self.start_button)

        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç
        self.expense_layout = QHBoxLayout()
        self.expense_layout.addWidget(self.current_expense_label)
        self.expense_layout.addWidget(self.current_expense_input)
        self.expense_layout.addWidget(self.add_expense_button)
        self.expense_layout.addWidget(self.finish_day_button)
        self.layout.addLayout(self.expense_layout)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
        self.layout.addWidget(self.info_label)

        # –¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.layout.addWidget(self.table)

        self.central_widget.setLayout(self.layout)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.days = 0
        self.total_expense = 0
        self.daily_expenses_actual = []
        self.remaining_total = 0
        self.remaining_days = 0
        self.daily_expense = 0
        self.current_day = 1
        self.accumulated_expense_for_day = 0

        # –ù–∞—á–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        self.add_expense_button.setEnabled(False)
        self.finish_day_button.setEnabled(False)

    def start_tracking(self):
        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            self.days = int(self.days_input.text())
            self.total_expense = float(self.total_expense_input.text())

            if self.days <= 0 or self.total_expense < 0:
                self.info_label.setText("–û—à–∏–±–∫–∞: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º, –∞ —Å—É–º–º–∞ —Ç—Ä–∞—Ç ‚Äî –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                return

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            self.remaining_total = self.total_expense
            self.remaining_days = self.days
            self.daily_expense = self.total_expense / self.days
            self.daily_expenses_actual = []
            self.current_day = 1
            self.accumulated_expense_for_day = 0

            # –í–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            self.add_expense_button.setEnabled(True)
            self.finish_day_button.setEnabled(True)

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            self.update_info()

        except ValueError:
            self.info_label.setText("–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")

    def update_info(self):
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –º–µ—Ç–∫–∏
        remaining_for_day = self.daily_expense - self.accumulated_expense_for_day
        self.info_label.setText(
            f"–î–µ–Ω—å {self.current_day}:\n"
            f"–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ç—Ä–∞—Ç–∞: {self.daily_expense:.2f}\n"
            f"–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å: {remaining_for_day:.2f}\n"
            f"–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {self.remaining_total:.2f}"
        )

    def add_current_expense(self):
        try:
            current_expense = float(self.current_expense_input.text())
            if current_expense < 0:
                self.info_label.setText("–û—à–∏–±–∫–∞: –¢–µ–∫—É—â–∞—è —Ç—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
                return

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Ç—Ä–∞—Ç—É –∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º —Ç—Ä–∞—Ç–∞–º –¥–Ω—è
            self.accumulated_expense_for_day += current_expense
            self.remaining_total -= current_expense
            self.current_expense_input.clear()

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            self.update_info()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –æ–±—â–µ–π —Å—É–º–º—ã —Ç—Ä–∞—Ç
            if self.remaining_total <= 0:
                self.info_label.setText("–í–Ω–∏–º–∞–Ω–∏–µ: –í—Å–µ –¥–µ–Ω—å–≥–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω—ã!")

            # –ï—Å–ª–∏ –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –¥–µ–Ω—å –º–µ–Ω—å—à–µ –Ω—É–ª—è, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            remaining_for_day = self.daily_expense - self.accumulated_expense_for_day
            if remaining_for_day < 0:
                self.info_label.setText("–í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º—É—é —Ç—Ä–∞—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å!")

        except ValueError:
            self.info_label.setText("–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

    def finish_current_day(self):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ç—Ä–∞—Ç—É –∑–∞ –¥–µ–Ω—å
        self.daily_expenses_actual.append(self.accumulated_expense_for_day)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.show_statistics()

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
        self.remaining_days -= 1
        if self.remaining_days > 0 and self.remaining_total > 0:
            self.daily_expense = self.remaining_total / self.remaining_days
            self.current_day += 1
            self.accumulated_expense_for_day = 0
            self.update_info()
        else:
            self.info_label.setText("–í—Å–µ –¥–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
            self.add_expense_button.setEnabled(False)
            self.finish_day_button.setEnabled(False)

    def show_statistics(self):
        # –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
        self.table.setRowCount(len(self.daily_expenses_actual))

        total_spent = 0
        for row, expense in enumerate(self.daily_expenses_actual):
            self.table.setItem(row, 0, QTableWidgetItem(str(row + 1)))
            self.table.setItem(row, 1, QTableWidgetItem(f"{expense:.2f}"))
            total_spent += expense

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º–æ–π
        self.table.insertRow(len(self.daily_expenses_actual))
        self.table.setItem(len(self.daily_expenses_actual), 0, QTableWidgetItem("–ò—Ç–æ–≥–æ:"))
        self.table.setItem(len(self.daily_expenses_actual), 1, QTableWidgetItem(f"{total_spent:.2f}"))


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ExpenseTracker()

    # –ü—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫ –º–µ—Ç–æ–¥–∞–º
    window.add_expense_button.clicked.connect(window.add_current_expense)
    window.finish_day_button.clicked.connect(window.finish_current_day)

    window.show()
    sys.exit(app.exec_())
```

### –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ:
1. **–£–±—Ä–∞–Ω—ã –¥–∏–∞–ª–æ–≥–æ–≤—ã–µ –æ–∫–Ω–∞:**
   - –í–º–µ—Å—Ç–æ `QMessageBox` –¥–æ–±–∞–≤–ª–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ø–æ–ª—è –≤–≤–æ–¥–∞, –∫–Ω–æ–ø–∫–∏, –º–µ—Ç–∫–∏) –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ.

2. **–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:**
   - –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–µ–π —Ç—Ä–∞—Ç—ã.
   - –ö–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É" –∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å".
   - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.

3. **–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã:**
   - –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã –∏ –∑–∞–≤–µ—Ä—à–∞—Ç—å –¥–Ω–∏.
   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.

4. **–£–ª—É—á—à–µ–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞:**
   - –ú–µ—Ç–æ–¥—ã `add_current_expense` –∏ `finish_current_day` —É–ø—Ä–∞–≤–ª—è—é—Ç –ª–æ–≥–∏–∫–æ–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞—Ç –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω–µ–π.

### –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏ –æ–±—â—É—é —Å—É–º–º—É —Ç—Ä–∞—Ç.
- –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ" –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç.
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–µ–Ω—å, –ø–æ—Å–ª–µ —á–µ–≥–æ —Ç–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.
- –í—Å—è —Ä–∞–±–æ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ.

–¢–µ–ø–µ—Ä—å –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–º –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–º. –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å! üòä
